<App>

	<!--<Font File="assets/fontawesome-webfont.ttf" ux:Global="FontAwesome" />-->
	<JavaScript>
		var experiment = require("ForeignCodeExperimentModule");
		var Observable = require("FuseJS/Observable");
		var Lifecycle = require('FuseJS/Lifecycle');
		var service = require('Service');

		var usernameObservale = Observable("");
		var passwordObservale = Observable("");
		var isPlaying = Observable(false);
		var isBackgrounExcecuting = Observable(false);

		/*var Maps = require("FuseJS/Maps");
		Maps.openAt(59.9117715, 10.7400957);*/
		var LogTextFunction = function () {
			if(usernameObservale.value){	
				//console.log(usernameObservale.value);
				experiment.Notify(usernameObservale.value);
			}
		};

		var loginFunction = function() {
			// body...
			if(usernameObservale.value && passwordObservale.value){
				var status = 0;
				var response_ok = false;

				var xhr = new XMLHttpRequest();
	            xhr.open("POST", 'http://anaxtest.c1.biz/OEP/login.php', true);

	            //Send the proper header information along with the request
	            xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");

	            xhr.onreadystatechange = function () { 
	            	// Call a function when the state changes.
	                if (this.readyState === XMLHttpRequest.DONE && this.status === 200) {
	                    console.log(JSON.parse(this.responseText.toString()));
	                    console.log(typeof this.responseText.toString());
	                    console.log(this.responseText.toString());
	                    experiment.toastText(this.responseText.toString()); 
	                }
	            }
	            xhr.send("username=" + usernameObservale.value + "&password=" + passwordObservale.value);
				}
		}

	    Lifecycle.on("enteringForeground", function() {
	        
	        console.log("╔══════╗\n");
	        console.log("\n");
	        console.log("\n");
	        console.log("═══> on enteringForeground <═══");
	    	console.log("\n");
	    	console.log("\n");
	    	console.log("╚══════╝\n");

	    });
	    Lifecycle.on("enteringInteractive", function() {
	        
	        console.log("╔══════╗\n");
	        console.log("\n");
	        console.log("\n");
	        console.log("═══> on enteringInteractive <═══");
	        console.log("\n");
	        console.log("\n");
	        console.log("╚══════╝\n");

	        BackgroundVideo.resume();
	    });
	    Lifecycle.on("exitedInteractive", function() {
	        
			console.log("╔═══╗\n");
	        console.log("\n");
	        console.log("\n");
	        console.log("═══> on exitedInteractive <═══");
	    	console.log("\n");
	    	console.log("\n");
	    	console.log("╚══════╝\n");

	    });
	    Lifecycle.on("enteringBackground", function() {
	        
	        console.log("╔══════╗\n");
	        console.log("\n");
	        console.log("\n");
	        console.log("═══> on enteringBackground <═══");
	    	console.log("\n");
	    	console.log("\n");
	    	console.log("╚══════╝\n");

	    });
	    Lifecycle.on("stateChanged", function(newState) {
	        
	        console.log("╔══════╗\n");
	        console.log("\n");
	        console.log("\n");
	        console.log("═══> on stateChanged " + newState + " <═══");
	    	console.log("\n");
	    	console.log("\n");
	    	console.log("╚══════╝\n");

	    });

	    service.on("Service", function(state) {
	    	
	    	console.log("╔══════╗\n");
	    	console.log("\n");
	        console.log("\n");
	        console.log("═══> Service Status Changed " + state);
	    	console.log("\n");
	    	console.log("\n");
	    	console.log("╚══════╝\n");

		});

		module.exports = {
			LogText: LogTextFunction ,
			usernameObservale: usernameObservale ,
			lifecycleState: Lifecycle.observe("stateChanged"),
			loginFunction:loginFunction,
			passwordObservale:passwordObservale,
			GetWindow:function() {
				if(!isBackgrounExcecuting.value){
					service.StartService();
					isBackgrounExcecuting.value = true;
				}else{
					service.StopService();
					isBackgrounExcecuting.value = false;
				}
			}
		};
	</JavaScript>
	<DockPanel>
		<Video ux:Name="BackgroundVideo" AutoPlay="true" File="Assets/Videos/Background3.mp4" IsLooping="true" StretchMode="Uniform" StretchDirection="UpOnly" Opacity="0.5" Color="#FFF" Layer="Background" Alignment="Default" Volume="0" />
		<ScrollView>
			<StackPanel>
				
				<StackPanel Height="170" Alignment="Center" Width="100%">
					<Text Alignment="Center" TextAlignment="Center" TextColor="#200E08" TextWrapping="NoWrap" Margin="10" FontSize="35" Color="#FFF" Value="Open Education" />
					<StackPanel Orientation="Horizontal" Alignment="Center">
						<Text Value="Made with" Alignment="Center" TextAlignment="Center" TextColor="#200E08" TextWrapping="NoWrap" FontSize="15" Color="#FFF" Margin="0, 0, 5, 0" />
						<Path Data="M462.3 62.6C407.5 15.9 326 24.3 275.7 76.2L256 96.5l-19.7-20.3C186.1 24.3 104.5 15.9 49.7 62.6c-62.8 53.6-66.1 149.8-9.9 207.9l193.5 199.8c12.5 12.9 32.8 12.9 45.3 0l193.5-199.8c56.3-58.1 53-154.3-9.8-207.9z" Width="15" Fill="#E9564F" HitTestMode="Children">
							<Clicked>
								<Scale Factor=" 2" Duration="1" />
							</Clicked>
						</Path>
						<Text Value="by Alex (Anass)" Alignment="Center" TextAlignment="Center" TextColor="#200E08" TextWrapping="NoWrap" FontSize="15" Color="#FFF" Margin="5, 0, 0, 0" />
					</StackPanel>
					
					
				</StackPanel>
				<Rectangle CornerRadius="20" Alignment="Default" ClipToBounds="false">

					

					<Rectangle ux:Name="Login" CornerRadius="20" Margin="5, 5, 5, 5" Opacity="1" ClipToBounds="true" Padding="0, 0, 0, 0" Color="#FDF9F8" Alignment="Default" Width="100%" Height="100%">
						
						<StackPanel Margin="0, 0, 0, 0" Padding="0, 20, 0, 20" Opacity="1">
											
											<Circle Margin="10" Width="150" Height="150" Alignment="Center" Clicked="{GetWindow}">
												<Image File="res/mipmap-xxxhdpi/ic_launcher.png" Padding="0, 0, 0, 0" Margin="15, 15, 15, 15">
													
												</Image>
												<LinearGradient Angle="45">
													<GradientStop Offset="0" Color="#00D9FD" />
													<GradientStop Offset="1" Color="#0354FB" />
												</LinearGradient>
												<Shadow />
												<WhilePressed>
													<!-- <Rotate Degrees="360" Duration="0.5" DurationBack=".5" /> -->
													<!-- <Scale Factor="1.1" Duration=".1" /> -->
													<Scale Factor=".9" Duration=".1" />
												</WhilePressed>
											</Circle>
						
											
											<OETextInput ux:Name="Username" Value="{usernameObservale}" PlaceholderText="Username" Opacity="1" />
											<OEPasswordInput ux:Name="Password" Value="{passwordObservale}" PlaceholderText="Password" Opacity="1" />
											<OECheckBox Height="50" />
						
						
						
						
											<OEButton Clicked="{loginFunction}" CornerRadius="50" Height="50" Width="100%" Margin="10" Text="Login" />
											<StackPanel Orientation="Horizontal" Alignment="Center" Margin="0, 0, 0, 0">
												<Text Value="Not registered?" Alignment="Center" />
												<Text Value=" Create an account" Alignment="Center" Margin="0, 0, 0, 0" Color="#019DFC" HitTestMode="LocalVisualAndChildren">
													<WhilePressed>
														<!-- <Scale Factor="1.2" Duration=".3" /> -->
														<Scale Factor=".9" Duration=".1" />
													</WhilePressed>
													<Clicked>
														<ToggleSelection TargetNode="Registeration" />
													</Clicked>
												</Text>
											</StackPanel>
						
										</StackPanel>
					</Rectangle>
					<Selection />
					<Rectangle ux:Name="Registeration" CornerRadius="20" Padding="0, 0, 0, 0" Margin="5, 5, 5, 5" Color="#FDF9F8" Opacity="0" Alignment="Default" Width="100% " Height="80%">
						<Selectable Value="Registeration" />
						<StackPanel Padding="0, 20, 0, 20" Opacity="1" Margin="0, 0, 0, 0">
											<Circle Margin="10" Width="150" Height="150" Alignment="Center" Clicked="{GetWindow}">
												<Image File="res/mipmap-xxxhdpi/ic_launcher.png" Padding="0, 0, 0, 0" Margin="15, 15, 15, 15">
													
												</Image>
												<LinearGradient Angle="45">
													<GradientStop Offset="0" Color="#00D9FD" />
													<GradientStop Offset="1" Color="#0354FB" />
												</LinearGradient>
												<Shadow />
												<WhilePressed>
													<!-- <Rotate Degrees="360" Duration="0.5" DurationBack=".5" /> -->
													<!-- <Scale Factor="1.1" Duration=".1" /> -->
													<Scale Factor=".9" Duration=".1" />
												</WhilePressed>
											</Circle>
						
											<OETextInput ux:Name="UsernameRegister" PlaceholderText="Username" Opacity="1" />
											<OEPasswordInput ux:Name="PasswordRegister" PlaceholderText="Password" Opacity="1" />
											<OETextInput ux:Name="EmailRegister" PlaceholderText="Email" Opacity="1" />
											<OEButton CornerRadius="50" Height="50" Width="100%" Margin="10" Text="Register" />
											<StackPanel Orientation="Horizontal" Alignment="Center" Margin="0, 0, 0, 0">
												<Text Value="Already registered? " Alignment="Center" />
												<Text Value=" Sign in" Alignment="Center" Margin="0, 0, 0, 0" Color="#019DFC" HitTestMode="LocalVisualAndChildren">
													<WhilePressed>
														<!-- <Scale Factor="1.2" Duration=".3" /> -->
														<Scale Factor=".9" Duration=".1" />
													</WhilePressed>
													<Clicked>
														<ToggleSelection />
													</Clicked>
													<WhileSelected>
														<Change Registeration.ZOffset="10" Duration=".5" DurationBack=".3" />
														<!-- <Change Registeration.Opacity="1" /> -->
														<Change Registeration.Opacity="1" Duration=".5" DurationBack=".3" />
														<Change Registeration.Height="100%" Duration=".5" DurationBack=".3" />
													</WhileSelected>
												</Text>
											</StackPanel>
											
										</StackPanel>
					</Rectangle>
				</Rectangle>
				
				<!--<Text Value="{lifecycleState}" />-->
				
			</StackPanel>
		</ScrollView>


		<!--<VideoItem Url="https://pixabay.com/videos/download/video-7268_medium.mp4?attachment" />-->
		<!--<Image File="images/svgs/hat.svg" />-->

		<BottomFrameBackground Dock="Bottom" />
	</DockPanel>
</App>